<div class="hololayout row row-fluid">
    <div class="holoframe span9 col-xs-8 col-md-9">
      <div id="_anim_img{{ id }}">
      {% block init_frame %}
      {{ init_frame }}
      {% endblock %}
      </div>
    </div>
    <div class="span3 col-xs-4 col-md-3">
    <form class="holoform well">
      {% for widget_data in widgets %}
      {% if widget_data['type'] == 'slider' %}
      <div class="form-group control-group holoformgroup" style='{{ widget_data['visibility'] }}'>
	<label for="textInput{{ id }}_{{ widget_data['dim'] }}"><strong>{{ widget_data['dim_label'] }}:</strong></label>
	<div class="hololayout">
	  <div class="hologroup col-xs-4 span4">
            <input type="text" class="holotext form-control input-small" id="textInput{{ id }}_{{ widget_data['dim'] }}" value="" disabled>
	  </div><!--
          --><div class="holoslider span7 offset1 col-xs-7 col-xs-offset-1" id="_anim_widget{{ id }}_{{ widget_data['dim'] }}"></div>
	</div>
      </div>
      <script>
	/* Load JQuery UI CSS */
        function loadcssfile(filename){
            var fileref=document.createElement("link")
            fileref.setAttribute("rel", "stylesheet")
            fileref.setAttribute("type", "text/css")
            fileref.setAttribute("href", filename)
            document.getElementsByTagName("head")[0].appendChild(fileref)
        }
        loadcssfile("https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css");
        /* Check if jQuery and jQueryUI have been loaded
	   otherwise load with require.js */
        var jQuery = window.jQuery,
        // check for old versions of jQuery
        oldjQuery = jQuery && !!jQuery.fn.jquery.match(/^1\.[0-4](\.|$)/),
        jquery_path = '',
        paths = {},
        noConflict;
        var jQueryUI = jQuery.ui;
        // check for jQuery
        if (!jQuery || oldjQuery) {
            // load if it's not available or doesn't meet min standards
            paths.jQuery = jQuery;
            noConflict = !!oldjQuery;
        } else {
            // register the current jQuery
            define('jquery', [], function() { return jQuery; });
        }
        if (!jQueryUI) {
            paths.jQueryUI = "{{ CDN['jQueryUI'] }}"
        } else {
            define('jQueryUI', [], function() { return jQuery.ui; });
        }
	paths.underscore = "{{ CDN['underscore'] }}";
        var jquery_require = {paths: paths,
                              shim: {
                                  "jQueryUI": {
                                      exports:"$",
                                      deps: ['jquery']
                                  },
				  "underscore": {
				      exports: '_'
				  }
	                      }}
        require.config(jquery_require);
        require(["jQueryUI", "underscore"], function(jUI, _){
            if (noConflict) $.noConflict(true);
            var valMap{{ id }}_{{ widget_data['dim'] }} = {{ widget_data['vals'] }};
            $('#_anim_widget{{ id }}_{{ widget_data['dim'] }}').slider({
                animate: "fast",
                min: 0,
                max: valMap{{ id }}_{{ widget_data['dim'] }}.length - 1,
                value: 0,
                slide: _.throttle(function(event, ui) {
                    var dim_val = valMap{{ id }}_{{ widget_data['dim'] }}[ui.value];
                    $('#textInput{{ id }}_{{ widget_data['dim'] }}').val(dim_val);
                    anim{{ id }}.set_frame(dim_val, {{ widget_data['dim_idx'] }});
		    }, {{ throttle }})
            });
            $('#_anim_widget{{ id }}_{{ widget_data['dim'] }}').keypress(function(event) {
                if (event.which == 80 || event.which == 112) {
                    var start = $(this).slider("option", "value");
                    var stop =  $(this).slider("option", "max");
                    for (var i=start; i<=stop; i++) {
                        var delay = i*{{ delay }};
                        $.proxy(function doSetTimeout(i) { setTimeout($.proxy(function() {
                            var val = {value:i};
                            $(this).slider('value',i);
                            $(this).slider("option", "slide")(null, val);
                        }, $(this)), delay);
							 }, $(this))(i);
                    }
                }
                if (event.which == 82 || event.which == 114) {
                    var start = $(this).slider("option", "value");
                    var stop =  $(this).slider("option", "min");
                    var count = 0;
                    for (var i=start; i>=stop; i--) {
                        var delay = count*{{ delay }};
                        count = count + 1;
                        $.proxy(function doSetTimeout(i) { setTimeout($.proxy(function() {
                            var val = {value:i};
                            $(this).slider('value',i);
                            $(this).slider("option", "slide")(null, val);
                        }, $(this)), delay);
							 }, $(this))(i);
                    }
                }
            });
            $('#textInput{{ id }}_{{ widget_data['dim'] }}').val(valMap{{ id }}_{{ widget_data['dim'] }}[0]);
        });
      </script>
      {% elif widget_data['type']=='dropdown' %}
      <div class="form-group control-group" style='{{ widget_data['visibility'] }}'>
	<label for="textInput{{ id }}_{{ widget_data['dim'] }}"><strong>{{ widget_data['dim'] }}:</strong></label>
        <select class="holoselect form-control" id="_anim_widget{{ id }}_{{ widget_data['dim'] }}" >
        </select>
      </div>
      <script>
        var valMap{{ id }}_{{ widget_data['dim'] }} = {{ widget_data['vals'] }};
        var options = $("#_anim_widget{{ id }}_{{ widget_data['dim'] }}");
        for (var i=0; i<valMap{{ id }}_{{ widget_data['dim'] }}.length; i++){
            options.append($("<option>", {
                value: i,
                text:  valMap{{ id }}_{{ widget_data['dim'] }}[i]
            }));
        };
        $('#_anim_widget{{ id }}_{{ widget_data['dim'] }}').on('change', function(event, ui) {
            var dim_val = valMap{{ id }}_{{ widget_data['dim'] }}[this.value];
            if(anim{{ id }}) {
                anim{{ id }}.set_frame(dim_val, {{ widget_data['dim_idx'] }});
            }
        });
      </script>
      {% endif %}
      {% endfor %}
    </form>
    </div>
</div>


<script language="javascript">
    /* Instantiate the {{ widget_name }} class. */
    /* The IDs given should match those used in the template above. */
    (function() {
        var widget_ids = new Array({{ Nwidget }});
        {% for dim in dimensions %}
        widget_ids[{{ loop.index0 }}] = "_anim_widget{{ id }}_{{ dim }}";
        {% endfor %}
        var frame_data = {{ frames | safe }};
        var dim_vals = {{ init_dim_vals }};
        var keyMap = {{ key_data }};
        var notFound = "{{ notFound }}";

    	function create_widget() {
            setTimeout(function() {
	            anim{{ id }} = new {{ widget_name }}(frame_data, "{{ id }}", widget_ids,
                        keyMap, dim_vals, notFound, {{ load_json }}, {{ mode }}, {{ cached }});
	    }, 0);
	}	

	{% block create_widget %}
        create_widget();
	{% endblock %}
    })();
</script>
